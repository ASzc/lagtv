require 'spec_helper'

describe IsHuman do
  NINE_PLUS_SALT_SHA1 = 'a2172648c66cbee093737007019dcb72beca4526'

  before do
    IsHuman.salt = 'blah'
    @is_human = IsHuman.new(User.new)
  end

  it "generates three random numbers between 2 and 10" do
    @is_human.numbers.count.should == 3
    @is_human.numbers[0].should be_between(2, 10)
    @is_human.numbers[1].should be_between(2, 10)
    @is_human.numbers[2].should be_between(2, 10)
  end

  it "selects two categories that do not equal each other" do
    @is_human.primary_category.should match /flowers|fruit|animals|clothes/
    @is_human.secondary_category.should match /flowers|fruit|animals|clothes/
    @is_human.primary_category.should_not == @is_human.secondary_category
  end

  it "sums the first two numbers in sequence to form the answer" do
    @is_human.numbers = [4, 5, 10]
    @is_human.answer.should == 9
  end

  it "generates a question containing the various numbers and categories" do
    @is_human.items = ['8 apples', '5 bananas', '2 hats']
    @is_human.primary_category = :fruits
    @is_human.question.should == "If I had 8 apples, 5 bananas and 2 hats. How many fruits do I have?"
  end

  it "generates an SHA1 hash of the answer in lower case words combined with the secret salt" do
    @is_human.numbers = [4, 5, 10]
    @is_human.hashed_answer.should == NINE_PLUS_SALT_SHA1
  end

  it "checks that a correct numeric answer matches the hash generated by a previous question" do
    params = { :is_human_attempt => '9', :is_human_hash => NINE_PLUS_SALT_SHA1 }
    IsHuman.correct?(params).should be_true
  end

  it "checks that an incorrect numeric answer doesn't matches the hash generated by a previous question" do
    params = { :is_human_attempt => '15', :is_human_hash => NINE_PLUS_SALT_SHA1 }
    IsHuman.correct?(params).should be_false
  end

  it "checks that a correct word answer matches the hash generated by a previous question" do
    params = { :is_human_attempt => 'nine', :is_human_hash => NINE_PLUS_SALT_SHA1 }
    IsHuman.correct?(params).should be_true
  end  

  it "checks that a correct word (mixed case) answer matches the hash generated by a previous question" do
    params = { :is_human_attempt => 'NiNe', :is_human_hash => NINE_PLUS_SALT_SHA1 }
    IsHuman.correct?(params).should be_true
  end  

  it "checks that an incorrect word answer doesn't matches the hash generated by a previous question" do
    params = { :is_human_attempt => 'one', :is_human_hash => NINE_PLUS_SALT_SHA1 }
    IsHuman.correct?(params).should be_false
  end

  it "checks that an incorrect word (that isn't a number) answer doesn't matches the hash generated by a previous question" do
    params = { :is_human_attempt => 'house', :is_human_hash => NINE_PLUS_SALT_SHA1 }
    IsHuman.correct?(params).should be_false
  end

  it "returns false when check the answer if 0 is attempted" do
    params = { :is_human_attempt => '0', :is_human_hash => NINE_PLUS_SALT_SHA1 }
    IsHuman.correct?(params).should be_false
  end  

  it "removes the is_human keys from the passed hash when checking the answer" do
    params = { :is_human_attempt => '1', :is_human_hash => '123' }
    IsHuman.correct?(params)
    params.keys.count.should == 0
  end
end